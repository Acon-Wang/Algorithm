#include<iostream>
#include<cstring>
#include<algorithm>
using namespace std;
const int N=510,M=100010;
struct Edge{
    int a,b,c;
}edges[M];
int n,m,k;
int dist[N],backcopy[N];
int bellman_ford(){
    memset(dist ,0x3f,sizeof dist);
    dist[1]=0;
    for(int i=0;i<k;i++){
        memcpy(backcopy,dist,sizeof dist);
        for(int j=0;j<m;j++){
            int a=edges[j].a,b=edges[j].b,w=edges[j].c;
            dist[b]=min(dist[b],backcopy[a]+w);
        }
    }
    return 0;
}
int main(){
    cin>>n>>m>>k;
    for(int i=0;i<m;i++){
        int a,b,c;
        cin>>a>>b>>c;
        edges[i]={a,b,c};
    }
     bellman_ford();
     if(dist[n]>0x3f3f3f3f/2)cout<<"impossible";
     else cout<<dist[n];
    return 0;
}