#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
const int N=510;
int n,m;
int dist[N];
int g[N][N];
bool st[N];
int res;
int prim(){
    res=0;
    for(int i=0;i<n;i++){ 
        int t=-1;
        for(int j=1;j<=n;j++){
            if(!st[j]&&(t==-1||dist[t]>dist[j]))
             t=j;
        }
        if(i&&dist[t]==0x3f3f3f3f)return 0x3f3f3f3f;
        if(i) res+=dist[t];
        st[t]=true;
        for(int j=1;j<=n;j++){
            dist[j]=min(dist[j],g[t][j]);
        }
        
    }
    return res;
}
int main(){
    cin>>n>>m;
    memset(dist,0x3f,sizeof dist);
    memset(g,0x3f,sizeof g);
    while(m--){
        int a,b,c;
        cin>>a>>b>>c;
        g[a][b]=g[b][a]=min(g[a][b],c);
    }
    int t=prim();
    if(t==0x3f3f3f3f)printf("impossible");
    else cout<<t<<endl;
    return 0;
}