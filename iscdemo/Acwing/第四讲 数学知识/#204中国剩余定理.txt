#include<iostream>
#include<algorithm>
using namespace std;
typedef long long LL;
LL exgcd(LL a,LL b,LL &x,LL &y){
    if(!b){
        x=1,y=0;
        return a;
    }
    LL d= exgcd( b, a%b, y, x);
    y-=a/b*x;
    return d;
}
int main(){
    int n;
    cin>>n;
    LL a1,m1;
    scanf("%lld%lld",&a1,&m1);
    for(int i = 1; i < n; i++){
    LL a2,m2;
    scanf("%lld%lld",&a2,&m2);
    LL k1,k2;
    LL d=exgcd(a1,a2,k1,k2); //求 k1
    if((m2-m1)%d){         //如果m2-m1不是d的倍数 那么无解；
        puts("-1");
        return 0;
    }
    k1*=(m2-m1)/d;  //k1*a1-k2*a2=d 转换为k1 *a1-k2*a2=m2-m1
    int t=(a2/d); 
    k1=((k1%t)+t)%t;//因为k1+k*a2/d为通解 所以%t为k1最小正整数 防止在过程中爆LL；
    m1=k1*a1+m1; 
    a1=abs(a1/d*a2);
    }
    printf("%lld\n",((m1%a1)+a1%a1));  m1 mod  a1=x 最小正整数解
    return 0;
}